name: Java CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          java-package: jdk
          architecture: x64
      - name: Build with Maven
        run: mvn -B clean test package --file pom.xml
      - name: Check for formatting changes
        run: git diff --exit-code
      - name: Create artifact
        run: tar -zcvf built-server.tar.gz Server/
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: built-server
          path: built-server.tar.gz

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download artifact
        uses: actions/download-artifact@v1
        with:
          name: built-server
      - name: Unpack artifact
        run: cd built-server && tar -zxvf built-server.tar.gz
      - name: Build image
        run: docker build ./built-server/Server/ -f Dockerfile --tag image
      - name: Log into registry
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push image
        run: |
          IMAGE_ID=duelers/duelers
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
